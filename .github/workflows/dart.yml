name: Techrar

on:
  push:
    branches: ["master"]
  # pull_request:
  #   branches: ["master"]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter version 3.29.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      # - name: Analyze project source
      #   run: flutter analyze
      
      # - name: Test App
      #   run: flutter test

      - name: Build APK release
        run: flutter build apk --release

      - name: Upload Apk
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-${{ github.run_number }}
          path: build/app/outputs/flutter-apk/app-release.apk

      # - name: Build AppBundle release
      #   run: flutter build appbundle

      # - name: Upload Appbundle
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: release-appbundle-${{ github.run_number }}
      #     path: build/app/outputs/bundle/release/app-release.aab

      - name: Build ios release
        run: flutter build ios --no-codesign

      - name: Upload Runner.app
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-${{ github.run_number }}
          path: build/ios/iphoneos/Runner.app

      # - name: Archive iOS app
      #   run: |
      #     flutter build ios --release --no-codesign
      #     xcodebuild archive \
      #       -workspace ios/Runner.xcworkspace \
      #       -scheme Runner \
      #       -configuration Release \
      #       -archivePath build/ios/archive/Runner.xcarchive \
      #       -destination "generic/platform=iOS" \
      #       -allowProvisioningUpdates
        
      # - name: Export .ipa
      #   run: |
      #     xcodebuild -exportArchive \
      #       -archivePath build/ios/archive/Runner.xcarchive \
      #       -exportPath build/ios/ipa \
      #       -exportOptionsPlist ios/ExportOptions.plist

      # - name: Upload .ipa as artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-ipa
      #     path: build/ios/ipa/
          
      # - name: Upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{secrets.APP_ID}}
      #     serviceCredentialsFileContent: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
      #     groups: testers
      #     file: build/app/outputs/flutter-apk/app-release.apk

  # deploy-web:
  #   name: Deploy to Firebase
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #     - run: flutter pub get
  #     - run: flutter build web --release
  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
  #         projectId: your-project-id
  #         channelId: live

  # deploy-ios:
  #   name: Deploy to App Store
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '3.1.2'
  #     - run: gem install fastlane -NV
  #     - run: fastlane deploy_to_appstore

  # deploy-android:
  #   name: Deploy to Google Play Store
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '3.1.2'
  #     - run: gem install fastlane -NV
  #     - run: fastlane supply --aab $(find . -name "*.aab") --track internal --json_key "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}"
